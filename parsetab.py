
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '0CE7593976445260BECAC16129C77418'
    
_lr_action_items = {'TRIANGLE':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,54,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,54,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'ARRFLOAT':([0,7,9,27,34,35,37,43,48,50,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,100,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[2,-57,-58,2,-59,-60,2,2,2,2,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,2,-80,-43,-47,-85,-65,2,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'GTEQ':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,144,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'VOID':([13,],[20,]),'WIDTH':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,59,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,59,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'WHILE':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,60,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,60,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'DIFF':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,146,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'PRINT':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,64,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,64,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'{':([38,45,162,176,225,247,],[43,43,43,43,43,43,]),'LINE':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,65,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,65,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'RECT':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,66,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,66,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'COLOR':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,83,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,83,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'(':([25,32,54,57,59,60,64,65,66,68,73,77,81,83,86,88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,109,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[33,37,88,89,90,91,92,93,94,95,99,100,102,103,104,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,139,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'+':([105,106,107,109,111,113,114,116,120,122,140,142,152,155,181,193,194,214,215,],[-29,134,-24,-105,-28,-105,-27,-26,-26,-29,-88,-91,-20,-23,-25,-22,-21,-90,-89,]),'*':([105,107,109,111,113,114,116,120,122,140,142,181,214,215,],[-29,-24,-105,-28,153,-27,-26,-26,-29,-88,-91,-25,-90,-89,]),'-':([105,106,107,109,111,113,114,116,120,122,140,142,152,155,181,193,194,214,215,],[-29,136,-24,-105,-28,-105,-27,-26,-26,-29,-88,-91,-20,-23,-25,-22,-21,-90,-89,]),',':([18,46,105,106,107,109,110,111,112,113,114,115,116,117,120,121,122,124,125,126,129,132,133,135,137,140,142,147,150,152,155,157,159,179,180,181,182,186,187,188,189,190,191,192,193,194,195,196,197,202,203,204,206,209,210,214,215,230,231,232,233,234,236,],[30,50,-29,-105,-24,-105,143,-28,-105,-105,-27,-105,-26,160,165,165,165,169,170,171,174,177,178,-16,-19,-88,-91,-8,-15,-20,-23,-4,-7,-17,-18,-25,212,216,-12,-11,-14,-13,-9,-10,-22,-21,-5,-6,217,218,219,220,222,227,228,-90,-89,241,242,243,244,245,246,]),'/':([105,107,109,111,113,114,116,120,122,140,142,181,214,215,],[-29,-24,-105,-28,154,-27,-26,-26,-29,-88,-91,-25,-90,-89,]),'ID':([4,5,7,8,9,11,12,20,21,22,23,27,30,31,34,35,42,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,172,174,175,177,178,198,199,201,205,208,212,216,217,218,219,220,222,223,224,226,227,228,235,238,241,242,243,244,245,246,256,257,258,265,266,267,268,269,270,],[-33,-34,-57,18,-58,-35,-36,-30,-32,-31,32,-105,18,-37,-59,-60,46,-105,69,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,69,-80,-43,-47,-85,109,109,109,109,109,109,109,109,-65,109,109,109,69,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-66,109,109,109,109,-104,-78,-71,109,-105,109,109,109,109,109,109,109,109,-68,-70,109,109,-67,-69,109,109,109,109,109,109,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),';':([7,9,17,18,27,28,29,34,35,36,55,96,100,105,106,107,109,111,112,113,114,115,116,127,130,135,137,140,142,147,150,152,155,157,159,161,168,172,179,180,181,187,188,189,190,191,192,193,194,195,196,207,214,215,221,235,248,249,259,260,261,262,263,264,],[-57,-58,27,-105,-105,-61,-63,-59,-60,-62,-64,-65,-105,-29,-105,-24,-105,-28,-105,-105,-27,-105,-26,172,175,-16,-19,-88,-91,-8,-15,-20,-23,-4,-7,198,201,-66,-17,-18,-25,-12,-11,-14,-13,-9,-10,-22,-21,-5,-6,223,-90,-89,235,-67,257,258,265,266,267,268,269,270,]),'=':([69,173,],[97,205,]),'<':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,149,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'$end':([6,26,44,53,],[0,-1,-38,-39,]),'FUNCTION':([0,3,7,9,14,16,27,34,35,49,53,],[-105,13,-57,-58,13,-51,-105,-59,-60,-50,-39,]),'ARRINT':([0,7,9,27,34,35,37,43,48,50,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,100,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[1,-57,-58,1,-59,-60,1,1,1,1,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,1,-80,-43,-47,-85,-65,1,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'CUBE':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,73,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,73,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'FOR':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,77,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,77,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'ELSE':([53,208,],[-39,225,]),'>':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,151,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'[':([1,2,69,109,],[10,10,98,141,]),']':([19,105,106,107,109,111,112,113,114,115,116,128,135,137,140,142,147,150,152,155,157,159,179,180,181,185,187,188,189,190,191,192,193,194,195,196,214,215,],[31,-29,-105,-24,-105,-28,-105,-105,-27,-105,-26,173,-16,-19,-88,-91,-8,-15,-20,-23,-4,-7,-17,-18,-25,215,-12,-11,-14,-13,-9,-10,-22,-21,-5,-6,-90,-89,]),'TEAPOT':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,57,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,57,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'IF':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,81,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,81,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'AND':([105,106,107,109,111,112,113,114,115,116,120,122,135,137,140,142,147,150,152,155,179,180,181,187,188,189,190,191,192,193,194,214,215,],[-29,-105,-24,-105,-28,-105,-105,-27,156,-26,-26,-29,-16,-19,-88,-91,-8,-15,-20,-23,-17,-18,-25,-12,-11,-14,-13,-9,-10,-22,-21,-90,-89,]),'CTES':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[105,105,105,105,122,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,122,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'CTEI':([10,88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[19,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'EQ':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,148,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'INT':([0,7,9,13,27,34,35,37,43,48,50,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,100,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[4,-57,-58,22,4,-59,-60,4,4,4,4,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,4,-80,-43,-47,-85,-65,4,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'LTEQ':([105,106,107,109,111,112,113,114,116,120,122,135,137,140,142,152,155,179,180,181,193,194,214,215,],[-29,-105,-24,-105,-28,145,-105,-27,-26,-26,-29,-16,-19,-88,-91,-20,-23,-17,-18,-25,-22,-21,-90,-89,]),'FLOAT':([0,7,9,13,27,34,35,37,43,48,50,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,100,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[5,-57,-58,21,5,-59,-60,5,5,5,5,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,5,-80,-43,-47,-85,-65,5,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),')':([33,37,39,40,41,46,51,52,87,105,106,107,109,111,112,113,114,115,116,118,119,120,121,122,123,131,135,137,138,139,140,142,147,150,152,155,157,159,163,164,166,167,179,180,181,182,183,184,187,188,189,190,191,192,193,194,195,196,200,211,212,213,214,215,229,237,239,240,250,251,252,253,254,255,],[38,-105,-52,-53,45,-105,-54,-56,-55,-29,-105,-24,-105,-28,-105,-105,-27,-105,-26,161,162,-26,-105,-29,168,176,-16,-19,181,-105,-88,-91,-8,-15,-20,-23,-4,-7,-74,-76,-72,-73,-17,-18,-25,-105,214,-93,-12,-11,-14,-13,-9,-10,-22,-21,-5,-6,-75,-92,-105,-95,-90,-89,-94,247,248,249,259,260,261,262,263,264,]),'ARC':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,68,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,68,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'CTEF':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'CIRCLE':([7,9,27,34,35,43,48,53,55,56,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,86,-39,-64,-83,-86,-44,-81,-46,-45,-87,-49,-48,-82,-84,-79,86,-80,-43,-47,-85,-65,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'MAIN':([0,3,7,9,14,15,16,24,27,34,35,49,53,],[-105,-105,-57,-58,-105,25,-3,-2,-105,-59,-60,-50,-39,]),'}':([7,9,27,34,35,43,47,48,53,55,56,58,61,62,63,67,70,71,72,74,75,76,78,79,80,82,84,85,96,101,172,198,199,201,208,224,226,235,238,256,257,258,265,266,267,268,269,270,],[-57,-58,-105,-59,-60,-105,53,-105,-39,-64,-83,-40,-86,-44,-81,-46,-45,-87,-42,-48,-82,-84,-79,-105,-80,-43,-47,-85,-65,-41,-66,-104,-78,-71,-105,-68,-70,-67,-69,-77,-101,-103,-99,-98,-96,-97,-102,-100,]),'OR':([105,106,107,109,111,112,113,114,115,116,120,122,135,137,140,142,147,150,152,155,179,180,181,187,188,189,190,191,192,193,194,214,215,],[-29,-105,-24,-105,-28,-105,-105,-27,158,-26,-26,-29,-16,-19,-88,-91,-8,-15,-20,-23,-17,-18,-25,-12,-11,-14,-13,-9,-10,-22,-21,-90,-89,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cons':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'vars':([0,43,48,79,100,],[3,48,55,55,55,]),'color':([48,79,],[56,56,]),'statmp':([48,79,],[58,101,]),'arc':([48,79,],[61,61,]),'varspp':([8,30,],[17,36,]),'expressionp':([112,],[147,]),'factor':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'id':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[116,116,116,116,120,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,120,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'condp':([208,],[224,]),'functions':([3,14,],[14,14,]),'for':([48,79,],[67,67,]),'writep':([92,165,],[123,200,]),'circle':([48,79,],[85,85,]),'param':([37,50,],[39,87,]),'write':([48,79,],[70,70,]),'width':([48,79,],[71,71,]),'program':([0,],[6,]),'paramp':([46,],[51,]),'statm':([48,79,],[79,79,]),'functionsp':([37,],[41,]),'type':([0,27,37,43,48,50,79,100,],[8,8,42,8,8,42,8,8,]),'empty':([0,3,14,18,27,37,43,46,48,79,100,106,109,112,113,115,120,121,122,139,182,208,212,],[9,16,16,29,35,40,9,52,72,72,9,137,142,150,155,159,164,164,164,184,213,226,184,]),'body':([43,],[47,]),'draw':([48,79,],[74,74,]),'cube':([48,79,],[75,75,]),'triangle':([48,79,],[76,76,]),'sexprima':([115,],[157,]),'termp':([113,],[152,]),'asignp':([69,],[96,]),'arrp':([1,2,],[11,12,]),'sexp':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,139,141,143,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[110,117,118,119,121,124,125,126,127,128,129,131,132,133,138,182,185,186,195,196,197,121,202,203,204,206,207,209,210,221,182,230,231,232,233,234,236,237,239,240,250,251,252,253,254,255,]),'idpp':([139,212,],[183,229,]),'returntype':([13,],[23,]),'line':([48,79,],[78,78,]),'teapot':([48,79,],[63,63,]),'rect':([48,79,],[80,80,]),'varsppaux':([18,],[28,]),'term':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,153,154,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,193,194,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'main':([15,],[26,]),'programp':([3,14,],[15,24,]),'idppaux':([182,],[211,]),'writepp':([120,121,122,],[163,166,167,]),'expp':([106,],[135,]),'idp':([109,],[140,]),'asign':([48,79,100,],[82,82,130,]),'while':([48,79,],[84,84,]),'varsp':([0,27,43,48,79,100,],[7,34,7,7,7,7,]),'exp':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,134,136,139,141,143,144,145,146,148,149,151,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,179,180,112,112,112,187,188,189,190,191,192,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'cond':([48,79,],[62,62,]),'expression':([88,89,90,91,92,93,94,95,97,98,99,102,103,104,108,139,141,143,156,158,160,165,169,170,171,174,175,177,178,205,212,216,217,218,219,220,222,223,227,228,241,242,243,244,245,246,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'block':([38,45,162,176,225,247,],[44,49,199,208,238,256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> vars programp main','program',3,'p_program','SapphireParserScanner.py',14),
  ('programp -> functions programp','programp',2,'p_programp','SapphireParserScanner.py',17),
  ('programp -> empty','programp',1,'p_programp','SapphireParserScanner.py',18),
  ('sexp -> expression sexprima','sexp',2,'p_sexp','SapphireParserScanner.py',21),
  ('sexprima -> AND sexp','sexprima',2,'p_sexprima','SapphireParserScanner.py',24),
  ('sexprima -> OR sexp','sexprima',2,'p_sexprima','SapphireParserScanner.py',25),
  ('sexprima -> empty','sexprima',1,'p_sexprima','SapphireParserScanner.py',26),
  ('expression -> exp expressionp','expression',2,'p_expression','SapphireParserScanner.py',29),
  ('expressionp -> < exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',32),
  ('expressionp -> > exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',33),
  ('expressionp -> LTEQ exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',34),
  ('expressionp -> GTEQ exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',35),
  ('expressionp -> EQ exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',36),
  ('expressionp -> DIFF exp','expressionp',2,'p_expressionp','SapphireParserScanner.py',37),
  ('expressionp -> empty','expressionp',1,'p_expressionp','SapphireParserScanner.py',38),
  ('exp -> term expp','exp',2,'p_exp','SapphireParserScanner.py',41),
  ('expp -> + exp','expp',2,'p_expp','SapphireParserScanner.py',44),
  ('expp -> - exp','expp',2,'p_expp','SapphireParserScanner.py',45),
  ('expp -> empty','expp',1,'p_expp','SapphireParserScanner.py',46),
  ('term -> factor termp','term',2,'p_term','SapphireParserScanner.py',49),
  ('termp -> / term','termp',2,'p_termp','SapphireParserScanner.py',52),
  ('termp -> * term','termp',2,'p_termp','SapphireParserScanner.py',53),
  ('termp -> empty','termp',1,'p_termp','SapphireParserScanner.py',54),
  ('factor -> cons','factor',1,'p_factor','SapphireParserScanner.py',57),
  ('factor -> ( sexp )','factor',3,'p_factor','SapphireParserScanner.py',58),
  ('cons -> id','cons',1,'p_cons','SapphireParserScanner.py',61),
  ('cons -> CTEI','cons',1,'p_cons','SapphireParserScanner.py',62),
  ('cons -> CTEF','cons',1,'p_cons','SapphireParserScanner.py',63),
  ('cons -> CTES','cons',1,'p_cons','SapphireParserScanner.py',64),
  ('returntype -> VOID','returntype',1,'p_returntype','SapphireParserScanner.py',67),
  ('returntype -> INT','returntype',1,'p_returntype','SapphireParserScanner.py',68),
  ('returntype -> FLOAT','returntype',1,'p_returntype','SapphireParserScanner.py',69),
  ('type -> INT','type',1,'p_type','SapphireParserScanner.py',72),
  ('type -> FLOAT','type',1,'p_type','SapphireParserScanner.py',73),
  ('type -> ARRINT arrp','type',2,'p_type','SapphireParserScanner.py',74),
  ('type -> ARRFLOAT arrp','type',2,'p_type','SapphireParserScanner.py',75),
  ('arrp -> [ CTEI ]','arrp',3,'p_arrp','SapphireParserScanner.py',78),
  ('main -> MAIN ( ) block','main',4,'p_main','SapphireParserScanner.py',81),
  ('block -> { body }','block',3,'p_block','SapphireParserScanner.py',84),
  ('body -> vars statmp','body',2,'p_body','SapphireParserScanner.py',87),
  ('statmp -> statm statmp','statmp',2,'p_statmp','SapphireParserScanner.py',90),
  ('statmp -> empty','statmp',1,'p_statmp','SapphireParserScanner.py',91),
  ('statm -> asign','statm',1,'p_statm','SapphireParserScanner.py',94),
  ('statm -> cond','statm',1,'p_statm','SapphireParserScanner.py',95),
  ('statm -> write','statm',1,'p_statm','SapphireParserScanner.py',96),
  ('statm -> for','statm',1,'p_statm','SapphireParserScanner.py',97),
  ('statm -> while','statm',1,'p_statm','SapphireParserScanner.py',98),
  ('statm -> draw','statm',1,'p_statm','SapphireParserScanner.py',99),
  ('statm -> empty','statm',1,'p_statm','SapphireParserScanner.py',100),
  ('functions -> FUNCTION returntype ID ( functionsp ) block','functions',7,'p_functions','SapphireParserScanner.py',103),
  ('functions -> empty','functions',1,'p_functions','SapphireParserScanner.py',104),
  ('functionsp -> param','functionsp',1,'p_functionsp','SapphireParserScanner.py',116),
  ('functionsp -> empty','functionsp',1,'p_functionsp','SapphireParserScanner.py',117),
  ('param -> type ID paramp','param',3,'p_param','SapphireParserScanner.py',120),
  ('paramp -> , param','paramp',2,'p_paramp','SapphireParserScanner.py',125),
  ('paramp -> empty','paramp',1,'p_paramp','SapphireParserScanner.py',126),
  ('vars -> varsp','vars',1,'p_vars','SapphireParserScanner.py',129),
  ('vars -> empty','vars',1,'p_vars','SapphireParserScanner.py',130),
  ('varsp -> type varspp ; varsp','varsp',4,'p_varsp','SapphireParserScanner.py',133),
  ('varsp -> empty','varsp',1,'p_varsp','SapphireParserScanner.py',134),
  ('varspp -> ID varsppaux','varspp',2,'p_varspp','SapphireParserScanner.py',137),
  ('varsppaux -> , varspp','varsppaux',2,'p_varsppaux','SapphireParserScanner.py',140),
  ('varsppaux -> empty','varsppaux',1,'p_varsppaux','SapphireParserScanner.py',141),
  ('asign -> vars','asign',1,'p_asign','SapphireParserScanner.py',144),
  ('asign -> ID asignp','asign',2,'p_asign','SapphireParserScanner.py',145),
  ('asignp -> = sexp ;','asignp',3,'p_asignp','SapphireParserScanner.py',148),
  ('asignp -> [ sexp ] = sexp ;','asignp',6,'p_asignp','SapphireParserScanner.py',149),
  ('cond -> IF ( sexp ) block condp','cond',6,'p_cond','SapphireParserScanner.py',152),
  ('condp -> ELSE block','condp',2,'p_condp','SapphireParserScanner.py',155),
  ('condp -> empty','condp',1,'p_condp','SapphireParserScanner.py',156),
  ('write -> PRINT ( writep ) ;','write',5,'p_write','SapphireParserScanner.py',159),
  ('writep -> sexp writepp','writep',2,'p_writep','SapphireParserScanner.py',162),
  ('writep -> CTES writepp','writep',2,'p_writep','SapphireParserScanner.py',163),
  ('writep -> id writepp','writep',2,'p_writep','SapphireParserScanner.py',164),
  ('writepp -> , writep','writepp',2,'p_writepp','SapphireParserScanner.py',167),
  ('writepp -> empty','writepp',1,'p_writepp','SapphireParserScanner.py',168),
  ('for -> FOR ( asign ; sexp ; sexp ) block','for',9,'p_for','SapphireParserScanner.py',171),
  ('while -> WHILE ( sexp ) block','while',5,'p_while','SapphireParserScanner.py',174),
  ('draw -> line','draw',1,'p_draw','SapphireParserScanner.py',177),
  ('draw -> rect','draw',1,'p_draw','SapphireParserScanner.py',178),
  ('draw -> teapot','draw',1,'p_draw','SapphireParserScanner.py',179),
  ('draw -> cube','draw',1,'p_draw','SapphireParserScanner.py',180),
  ('draw -> color','draw',1,'p_draw','SapphireParserScanner.py',181),
  ('draw -> triangle','draw',1,'p_draw','SapphireParserScanner.py',182),
  ('draw -> circle','draw',1,'p_draw','SapphireParserScanner.py',183),
  ('draw -> arc','draw',1,'p_draw','SapphireParserScanner.py',184),
  ('draw -> width','draw',1,'p_draw','SapphireParserScanner.py',185),
  ('id -> ID idp','id',2,'p_id','SapphireParserScanner.py',188),
  ('idp -> [ sexp ]','idp',3,'p_idp','SapphireParserScanner.py',191),
  ('idp -> ( idpp )','idp',3,'p_idp','SapphireParserScanner.py',192),
  ('idp -> empty','idp',1,'p_idp','SapphireParserScanner.py',193),
  ('idpp -> sexp idppaux','idpp',2,'p_idpp','SapphireParserScanner.py',196),
  ('idpp -> empty','idpp',1,'p_idpp','SapphireParserScanner.py',197),
  ('idppaux -> , idpp','idppaux',2,'p_idppaux','SapphireParserScanner.py',200),
  ('idppaux -> empty','idppaux',1,'p_idppaux','SapphireParserScanner.py',201),
  ('line -> LINE ( sexp , sexp , sexp , sexp ) ;','line',11,'p_line','SapphireParserScanner.py',204),
  ('rect -> RECT ( sexp , sexp , sexp , sexp ) ;','rect',11,'p_rect','SapphireParserScanner.py',207),
  ('teapot -> TEAPOT ( sexp , sexp , sexp , sexp ) ;','teapot',11,'p_teapot','SapphireParserScanner.py',210),
  ('triangle -> TRIANGLE ( sexp , sexp , sexp , sexp ) ;','triangle',11,'p_triangle','SapphireParserScanner.py',213),
  ('cube -> CUBE ( sexp , sexp , sexp , sexp ) ;','cube',11,'p_cube','SapphireParserScanner.py',216),
  ('color -> COLOR ( sexp , sexp , sexp ) ;','color',9,'p_color','SapphireParserScanner.py',219),
  ('arc -> ARC ( sexp , sexp , sexp , sexp ) ;','arc',11,'p_arc','SapphireParserScanner.py',222),
  ('circle -> CIRCLE ( sexp , sexp , sexp ) ;','circle',9,'p_circe','SapphireParserScanner.py',225),
  ('width -> WIDTH ( sexp ) ;','width',5,'p_width','SapphireParserScanner.py',228),
  ('empty -> <empty>','empty',0,'p_empty','SapphireParserScanner.py',231),
]
